<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Temporizador de Meditación</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            background-color: #ffffff;
            color: #024499;
        }
    </style>
</head>
<body class="flex flex-col items-center justify-center min-h-screen">
    <!-- Logo de SacroVento -->
    <div class="text-center mb-6">
        <img src="LOGO SACROVENTO TRANSPARENTE.png" alt="Logo de SacroVento" class="w-32 h-auto mx-auto">
        <p class="text-lg font-bold" style="color: #dfa5c0;">MEDITACIÓN NO DUAL</p>
    </div>

    <!-- Temporizador -->
    <div class="text-center">
        <div id="timer" class="text-6xl font-mono mb-4" style="color: #024499;">15:00</div>
        <div class="flex justify-center gap-4 mb-4">
            <button id="start" class="bg-pink-500 text-white px-4 py-2 rounded hover:bg-pink-600" style="background-color: #dfa5c0;">Iniciar</button>
            <button id="pause" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600" style="background-color: #024499;">Pausar</button>
            <button id="reset" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">Reiniciar</button>
        </div>
        <p class="text-lg">Ciclos completados hoy: <span id="cycles" class="font-bold">0</span></p>
    </div>

    <!-- Sonido de alerta -->
    <audio id="alert-sound">
        <source src="https://www.soundjay.com/button/beep-07.wav" type="audio/wav">
    </audio>

    <script>
        let isRunning = false;
        let timerInterval;
        let timeRemaining = 15 * 60; // 15 minutos en segundos
        let cyclesCompleted = 0;
        let isMeditationPeriod = true;

        const timerDisplay = document.getElementById('timer');
        const startButton = document.getElementById('start');
        const pauseButton = document.getElementById('pause');
        const resetButton = document.getElementById('reset');
        const cyclesDisplay = document.getElementById('cycles');
        const alertSound = document.getElementById('alert-sound');

        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const secs = seconds % 60;
            return `${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;
        }

        function updateTimerDisplay() {
            timerDisplay.textContent = formatTime(timeRemaining);
        }

        function switchPeriod() {
            isMeditationPeriod = !isMeditationPeriod;
            timeRemaining = isMeditationPeriod ? 15 * 60 : 2 * 60;
            if (isMeditationPeriod) cyclesCompleted++;
            cyclesDisplay.textContent = cyclesCompleted;
            updateTimerDisplay();
        }

        function startTimer() {
            if (isRunning) return;
            isRunning = true;
            timerInterval = setInterval(() => {
                if (timeRemaining > 0) {
                    timeRemaining--;
                    updateTimerDisplay();
                } else {
                    alertSound.play();
                    switchPeriod();
                }
            }, 1000);
        }

        function pauseTimer() {
            isRunning = false;
            clearInterval(timerInterval);
        }

        function resetTimer() {
            isRunning = false;
            clearInterval(timerInterval);
            timeRemaining = 15 * 60;
            cyclesCompleted = 0;
            isMeditationPeriod = true;
            updateTimerDisplay();
            cyclesDisplay.textContent = cyclesCompleted;
        }

        startButton.addEventListener('click', startTimer);
        pauseButton.addEventListener('click', pauseTimer);
        resetButton.addEventListener('click', resetTimer);

        updateTimerDisplay();
    </script>
</body>
</html>

       
